{"ast":null,"code":"var _jsxFileName = \"/Users/thomashimawan/react projects/wordle/src/Components/Letter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { AppContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Letter(_ref) {\n  _s();\n\n  let {\n    letterPos,\n    attemptVal\n  } = _ref;\n  const {\n    board,\n    correctWord,\n    currAttempt,\n    setDisabledLetters\n  } = useContext(AppContext);\n  const letter = board[attemptVal][letterPos];\n  const correct = correctWord.toUpperCase()[letterPos] === letter;\n  const almost = !correct && letter !== \"\" && correctWord.includes(letter);\n  const letterState = currAttempt.attempt > attemptVal && (correct ? \"correct\" : almost ? \"almost\" : \"error\");\n  useEffect(() => {\n    if (letter !== \"\" && !correct && !almost) {\n      setDisabledLetters(prev => [...prev, letter]);\n    }\n  }, [currAttempt.attempt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letter\",\n    id: letterState,\n    children: [\"\", letter]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Letter, \"7MTCrZI3FmGEIU4KvOgzKU3DEOw=\");\n\n_c = Letter;\nexport default Letter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Letter\");","map":{"version":3,"names":["React","useContext","useEffect","AppContext","Letter","letterPos","attemptVal","board","correctWord","currAttempt","setDisabledLetters","letter","correct","toUpperCase","almost","includes","letterState","attempt","prev"],"sources":["/Users/thomashimawan/react projects/wordle/src/Components/Letter.js"],"sourcesContent":["import React, {useContext, useEffect} from 'react'\nimport { AppContext } from \"../App\";\n\nfunction Letter({letterPos,attemptVal}) {\n    const {board, correctWord, currAttempt, setDisabledLetters} = useContext(AppContext);\n    const letter = board[attemptVal][letterPos];\n\n    const correct = correctWord.toUpperCase()[letterPos] === letter\n    const almost =  !correct && letter !== \"\" && correctWord.includes(letter);\n\n    const letterState =currAttempt.attempt > attemptVal &&\n     (correct ? \"correct\": almost ? \"almost\": \"error\");\n\n    useEffect(() => {\n      if(letter !== \"\" && !correct && !almost){\n        setDisabledLetters((prev) => [...prev, letter]);\n      }\n    }, [currAttempt.attempt])\n  return (\n    <div className='letter' id={letterState} >{\"\"}{letter}</div>\n  )\n}\n\nexport default Letter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,QAA3B;;;AAEA,SAASC,MAAT,OAAwC;EAAA;;EAAA,IAAxB;IAACC,SAAD;IAAWC;EAAX,CAAwB;EACpC,MAAM;IAACC,KAAD;IAAQC,WAAR;IAAqBC,WAArB;IAAkCC;EAAlC,IAAwDT,UAAU,CAACE,UAAD,CAAxE;EACA,MAAMQ,MAAM,GAAGJ,KAAK,CAACD,UAAD,CAAL,CAAkBD,SAAlB,CAAf;EAEA,MAAMO,OAAO,GAAGJ,WAAW,CAACK,WAAZ,GAA0BR,SAA1B,MAAyCM,MAAzD;EACA,MAAMG,MAAM,GAAI,CAACF,OAAD,IAAYD,MAAM,KAAK,EAAvB,IAA6BH,WAAW,CAACO,QAAZ,CAAqBJ,MAArB,CAA7C;EAEA,MAAMK,WAAW,GAAEP,WAAW,CAACQ,OAAZ,GAAsBX,UAAtB,KACjBM,OAAO,GAAG,SAAH,GAAcE,MAAM,GAAG,QAAH,GAAa,OADvB,CAAnB;EAGAZ,SAAS,CAAC,MAAM;IACd,IAAGS,MAAM,KAAK,EAAX,IAAiB,CAACC,OAAlB,IAA6B,CAACE,MAAjC,EAAwC;MACtCJ,kBAAkB,CAAEQ,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUP,MAAV,CAAX,CAAlB;IACD;EACF,CAJQ,EAIN,CAACF,WAAW,CAACQ,OAAb,CAJM,CAAT;EAKF,oBACE;IAAK,SAAS,EAAC,QAAf;IAAwB,EAAE,EAAED,WAA5B;IAAA,WAA2C,EAA3C,EAA+CL,MAA/C;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD;;GAlBQP,M;;KAAAA,M;AAoBT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}